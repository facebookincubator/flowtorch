# Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved
# SPDX-License-Identifier: MIT

"""
Generates imports files for bijectors, distributions, and parameters.
This script assumes that you have used `setup.py develop`.

"""

import errno
import io
import os

import black
import flowtorch
from flowtorch.utils import (
    copyright_header,
    list_distributions,
    # list_bijectors,
    # list_parameters,
)

copyright_header = "".join(["# " + ln + "\n" for ln in copyright_header.splitlines()])

autogen_msg = """\"\"\"
Warning: This file was generated by flowtorch/scripts/generate_imports.py
Do not modify or delete!

\"\"\"
"""

mode = black.FileMode()
fast = False


def generate_distributions_imports(filename):

    with io.StringIO() as file:
        # Obtain list of distributions sorted by module
        d = list_distributions()
        d = sorted(d, key=lambda tup: tup[0])

        print(copyright_header, file=file)
        print(autogen_msg, file=file)
        for s, cls in d:
            print(f"from {cls.__module__} import {s}", file=file)

        print("", file=file)

        print("__all__ = [", file=file)
        all_list = ",\n\t".join([f'"{s}"' for s, _ in d])
        print("\t", end="", file=file)
        print(all_list, file=file)
        print("]", end="", file=file)

        contents = file.getvalue()

    with open(filename, "w") as real_file:
        print(
            black.format_file_contents(contents, fast=fast, mode=mode),
            file=real_file,
            end="",
        )


if __name__ == "__main__":
    # Create module folders if they don't exist
    try:
        for m in ["distributions", "bijectors", "parameters"]:
            os.makedirs(os.path.join(flowtorch.__path__[0], m))
    except OSError as e:
        if e.errno != errno.EEXIST:
            raise

    bijectors_init = os.path.join(flowtorch.__path__[0], "bijectors/__init__.py")
    distributions_init = os.path.join(
        flowtorch.__path__[0], "distributions/__init__.py"
    )
    parameters_init = os.path.join(flowtorch.__path__[0], "parameters/__init__.py")

    # generate_bijectors_imports()
    generate_distributions_imports(distributions_init)
    # generate_parameters_imports()

    # TODO: Apply linter to autogenerated __init__.py files

"use strict";(self.webpackChunkflowtorch=self.webpackChunkflowtorch||[]).push([[9935],{6470:(t,e,o)=>{o.r(e),o.d(e,{contentTitle:()=>p,default:()=>d,frontMatter:()=>l,metadata:()=>h,toc:()=>m});var a=o(7462),c=(o(7294),o(3905)),s=o(2814),i=o(1436),n=(o(1032),o(8666)),r=(o(2520),o(84),o(7868));const l={id:"flowtorch.bijectors.cast",sidebar_label:"cast"},p=void 0,h={unversionedId:"api/flowtorch.bijectors.cast",id:"api/flowtorch.bijectors.cast",isDocsHomePage:!1,title:"flowtorch.bijectors.cast",description:"flowtorch  bijectors  cast",source:"@site/docs/api/flowtorch.bijectors.cast.mdx",sourceDirName:"api",slug:"/api/flowtorch.bijectors.cast",permalink:"/api/flowtorch.bijectors.cast",editUrl:"https://github.com/facebookincubator/flowtorch/edit/main/website/docs/api/flowtorch.bijectors.cast.mdx",tags:[],version:"current",frontMatter:{id:"flowtorch.bijectors.cast",sidebar_label:"cast"},sidebar:"apiSidebar",previous:{title:"VolumePreserving",permalink:"/api/flowtorch.bijectors.volumepreserving"},next:{title:"cls",permalink:"/api/flowtorch.bijectors.cls"}},m=[{value:'<span className="doc-symbol-name">flowtorch.bijectors.cast</span>',id:"function",children:[],level:2}],b={toc:m};function d(t){let{components:e,...o}=t;return(0,c.kt)("wrapper",(0,a.Z)({},b,o,{components:e,mdxType:"MDXLayout"}),(0,c.kt)(r.Z,{url:"https://github.com/facebookincubator/flowtorch/blob/main/flowtorch/n3.8/typing.py",mdxType:"PythonNavbar"},(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"/api/flowtorch"},"flowtorch")," ",(0,c.kt)(s.G,{icon:i.cLY,size:"sm",mdxType:"FontAwesomeIcon"})," ",(0,c.kt)("a",{parentName:"p",href:"/api/flowtorch.bijectors"},"bijectors")," ",(0,c.kt)(s.G,{icon:i.cLY,size:"sm",mdxType:"FontAwesomeIcon"})," ",(0,c.kt)("em",{parentName:"p"},"cast"))),(0,c.kt)(n.Z,{mdxType:"PythonFunction"},(0,c.kt)("div",{className:"doc-function-row"},(0,c.kt)("div",{className:"doc-function-label"},(0,c.kt)("span",{className:"doc-symbol-label"},"function")),(0,c.kt)("div",{className:"doc-function-signature"},(0,c.kt)("h2",{id:"function"},(0,c.kt)("span",{className:"doc-symbol-name"},"flowtorch.bijectors.cast")),(0,c.kt)("span",{className:"doc-symbol-signature"},"(typ, val)")))),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"Cast a value to a type.\n\nThis returns the value unchanged.  To the type checker this\nsignals that the return value has the designated type, but at\nruntime we intentionally don't check anything (we want this\nto be as fast as possible).\n\n")))}d.isMDXComponent=!0}}]);
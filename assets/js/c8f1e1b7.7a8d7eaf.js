"use strict";(self.webpackChunkflowtorch=self.webpackChunkflowtorch||[]).push([[4461],{7272:(e,a,o)=>{o.r(a),o.d(a,{contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>m});var t=o(7462),c=(o(7294),o(3905)),s=o(2814),l=o(1436),n=(o(1032),o(8666)),r=(o(2520),o(84),o(7868));const i={id:"flowtorch.docs.walk_packages",sidebar_label:"walk_packages"},p=void 0,d={unversionedId:"api/flowtorch.docs.walk_packages",id:"api/flowtorch.docs.walk_packages",isDocsHomePage:!1,title:"flowtorch.docs.walk_packages",description:"flowtorch  docs  walk_packages",source:"@site/docs/api/flowtorch.docs.walk_packages.mdx",sourceDirName:"api",slug:"/api/flowtorch.docs.walk_packages",permalink:"/api/flowtorch.docs.walk_packages",editUrl:"https://github.com/facebookincubator/flowtorch/edit/main/website/docs/api/flowtorch.docs.walk_packages.mdx",tags:[],version:"current",frontMatter:{id:"flowtorch.docs.walk_packages",sidebar_label:"walk_packages"},sidebar:"apiSidebar",previous:{title:"sparse_module_hierarchy",permalink:"/api/flowtorch.docs.sparse_module_hierarchy"},next:{title:"Overview",permalink:"/api/flowtorch.lazy1"}},m=[{value:'<span className="doc-symbol-name">flowtorch.docs.walk_packages</span>',id:"function",children:[],level:2}],k={toc:m};function u(e){let{components:a,...o}=e;return(0,c.kt)("wrapper",(0,t.Z)({},k,o,{components:a,mdxType:"MDXLayout"}),(0,c.kt)(r.Z,{url:"https://github.com/facebookincubator/flowtorch/blob/main/flowtorch/docs.py",mdxType:"PythonNavbar"},(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"/api/flowtorch"},"flowtorch")," ",(0,c.kt)(s.G,{icon:l.cLY,size:"sm",mdxType:"FontAwesomeIcon"})," ",(0,c.kt)("a",{parentName:"p",href:"/api/flowtorch.docs"},"docs")," ",(0,c.kt)(s.G,{icon:l.cLY,size:"sm",mdxType:"FontAwesomeIcon"})," ",(0,c.kt)("em",{parentName:"p"},"walk_packages"))),(0,c.kt)(n.Z,{mdxType:"PythonFunction"},(0,c.kt)("div",{className:"doc-function-row"},(0,c.kt)("div",{className:"doc-function-label"},(0,c.kt)("span",{className:"doc-symbol-label"},"function")),(0,c.kt)("div",{className:"doc-function-signature"},(0,c.kt)("h2",{id:"function"},(0,c.kt)("span",{className:"doc-symbol-name"},"flowtorch.docs.walk","_","packages")),(0,c.kt)("span",{className:"doc-symbol-signature"},"(modname: str, filter: Union[Callable[[Any], bool], NoneType] = None) -> Mapping[str, Tuple[module, Sequence[Tuple[str, Any]]]]")))),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"\nGiven a base module name, return a mapping from the name of all modules\naccessible under the base to a tuple of module and symbol objects.\n\nA symbol is represented by a tuple of the object name and value, and is\neither a function or a class accessible when the module is imported.\n\n\n")))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkflowtorch=self.webpackChunkflowtorch||[]).push([[285],{4353:(o,t,e)=>{e.r(t),e.d(t,{contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>m,toc:()=>p});var c=e(7462),r=(e(7294),e(3905)),a=e(2814),s=e(1436),n=(e(1032),e(8666)),d=(e(2520),e(84),e(7868));const i={id:"flowtorch.docs.get_decorators",sidebar_label:"get_decorators"},l=void 0,m={unversionedId:"api/flowtorch.docs.get_decorators",id:"api/flowtorch.docs.get_decorators",isDocsHomePage:!1,title:"flowtorch.docs.get_decorators",description:"flowtorch  docs  get_decorators",source:"@site/docs/api/flowtorch.docs.get_decorators.mdx",sourceDirName:"api",slug:"/api/flowtorch.docs.get_decorators",permalink:"/api/flowtorch.docs.get_decorators",editUrl:"https://github.com/facebookincubator/flowtorch/edit/main/website/docs/api/flowtorch.docs.get_decorators.mdx",tags:[],version:"current",frontMatter:{id:"flowtorch.docs.get_decorators",sidebar_label:"get_decorators"},sidebar:"apiSidebar",previous:{title:"generate_module_markdown",permalink:"/api/flowtorch.docs.generate_module_markdown"},next:{title:"isclass",permalink:"/api/flowtorch.docs.isclass"}},p=[{value:'<span className="doc-symbol-name">flowtorch.docs.get_decorators</span>',id:"function",children:[],level:2}],f={toc:p};function u(o){let{components:t,...e}=o;return(0,r.kt)("wrapper",(0,c.Z)({},f,e,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(d.Z,{url:"https://github.com/facebookincubator/flowtorch/blob/main/flowtorch/docs.py",mdxType:"PythonNavbar"},(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/flowtorch"},"flowtorch")," ",(0,r.kt)(a.G,{icon:s.cLY,size:"sm",mdxType:"FontAwesomeIcon"})," ",(0,r.kt)("a",{parentName:"p",href:"/api/flowtorch.docs"},"docs")," ",(0,r.kt)(a.G,{icon:s.cLY,size:"sm",mdxType:"FontAwesomeIcon"})," ",(0,r.kt)("em",{parentName:"p"},"get_decorators"))),(0,r.kt)(n.Z,{mdxType:"PythonFunction"},(0,r.kt)("div",{className:"doc-function-row"},(0,r.kt)("div",{className:"doc-function-label"},(0,r.kt)("span",{className:"doc-symbol-label"},"function")),(0,r.kt)("div",{className:"doc-function-signature"},(0,r.kt)("h2",{id:"function"},(0,r.kt)("span",{className:"doc-symbol-name"},"flowtorch.docs.get","_","decorators")),(0,r.kt)("span",{className:"doc-symbol-signature"},"(function: Callable) -> Sequence[str]")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Returns list of decorators names\n\nArgs:\nfunction (Callable): decorated method/function\n\nReturn:\nList of decorators as strings\n\nExample:\nGiven:\n\n@my_decorator\n@another_decorator\ndef decorated_function():\npass\n\n>>> get_decorators(decorated_function)\n['@my_decorator', '@another_decorator']\n\n\n")))}u.isMDXComponent=!0}}]);